{"title":"University Enrollment ERD","markdown":{"yaml":{"title":"University Enrollment ERD","subtitle":"__SQL","format":{"html":{"code-fold":true,"code-line-numbers":true,"fig-width":10.5,"fig-height":7.5}}},"headingText":"Goal","containsRefs":false,"markdown":"\n\nI designed a relational database schema using an Entity-Relationship Diagram (ERD), incorporating key entities such as students, faculty, courses, departments, and enrollments with well-defined relationships. To ensure data integrity, I structured tables efficiently to reduce redundancy. The schema supports queries that retrieve relevant information, such as identifying faculty teaching a particular student in a given term, determining the number of courses offered, analyzing faculty teaching capacities, and filtering data based on specific criteria.\n\n## ERD\n![](image.png)\n\n## CODE\n```sql\n-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema university\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `university` ;\n\n-- -----------------------------------------------------\n-- Schema university\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `university` DEFAULT CHARACTER SET utf8 ;\nUSE `university` ;\n\n-- -----------------------------------------------------\n-- Table `university`.`college`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`college` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`college` (\n  `college_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `college_name` VARCHAR(45) NOT NULL,\n  PRIMARY KEY (`college_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`department`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`department` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`department` (\n  `department_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `department_name` VARCHAR(45) NOT NULL,\n  `department_code` VARCHAR(10) NOT NULL,\n  `college_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`department_id`),\n  INDEX `fk_department_colleage1_idx` (`college_id` ASC) VISIBLE,\n  CONSTRAINT `fk_department_colleage1`\n    FOREIGN KEY (`college_id`)\n    REFERENCES `university`.`college` (`college_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`course`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`course` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`course` (\n  `course_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `course_title` VARCHAR(45) NOT NULL,\n  `course_number` INT NOT NULL,\n  `course_credits` INT NOT NULL,\n  `department_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`course_id`),\n  INDEX `fk_course_department1_idx` (`department_id` ASC) VISIBLE,\n  CONSTRAINT `fk_course_department1`\n    FOREIGN KEY (`department_id`)\n    REFERENCES `university`.`department` (`department_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`faculty`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`faculty` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`faculty` (\n  `faculty_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `faculty_fname` VARCHAR(45) NOT NULL,\n  `faculty_lname` VARCHAR(45) NOT NULL,\n  `department_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`faculty_id`),\n  INDEX `fk_faculty_department1_idx` (`department_id` ASC) VISIBLE,\n  CONSTRAINT `fk_faculty_department1`\n    FOREIGN KEY (`department_id`)\n    REFERENCES `university`.`department` (`department_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`term`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`term` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`term` (\n  `term_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `term_name` VARCHAR(45) NOT NULL,\n  `term_year` YEAR(4) NOT NULL,\n  PRIMARY KEY (`term_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`section`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`section` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`section` (\n  `section_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `section_number` INT NOT NULL,\n  `section_capacity` INT NOT NULL,\n  `course_id` INT UNSIGNED NOT NULL,\n  `faculty_id` INT UNSIGNED NOT NULL,\n  `term_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`section_id`),\n  INDEX `fk_section_course1_idx` (`course_id` ASC) VISIBLE,\n  INDEX `fk_section_faculty1_idx` (`faculty_id` ASC) VISIBLE,\n  INDEX `fk_section_term1_idx` (`term_id` ASC) VISIBLE,\n  CONSTRAINT `fk_section_course1`\n    FOREIGN KEY (`course_id`)\n    REFERENCES `university`.`course` (`course_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_faculty1`\n    FOREIGN KEY (`faculty_id`)\n    REFERENCES `university`.`faculty` (`faculty_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_term1`\n    FOREIGN KEY (`term_id`)\n    REFERENCES `university`.`term` (`term_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`student`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`student` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`student` (\n  `student_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `student_fname` VARCHAR(45) NOT NULL,\n  `student_lname` VARCHAR(45) NOT NULL,\n  `student_gender` CHAR(1) NOT NULL,\n  `student_city` VARCHAR(45) NULL,\n  `student_state` VARCHAR(10) NOT NULL,\n  `student_birth` DATE NOT NULL,\n  PRIMARY KEY (`student_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`enrollment`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`enrollment` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`enrollment` (\n  `section_id` INT UNSIGNED NOT NULL,\n  `student_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`section_id`, `student_id`),\n  INDEX `fk_section_student_student1_idx` (`student_id` ASC) VISIBLE,\n  INDEX `fk_section_student_section1_idx` (`section_id` ASC) VISIBLE,\n  CONSTRAINT `fk_section_student_section1`\n    FOREIGN KEY (`section_id`)\n    REFERENCES `university`.`section` (`section_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_student_student1`\n    FOREIGN KEY (`student_id`)\n    REFERENCES `university`.`student` (`student_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\nuse university;\n\nINSERT INTO college (college_name)\nvalues \n('College of PhysicalScience and Engineering'),\n('College of Business and Communication'),\n('College of Language and Letters');\n\nINSERT INTO department (department_name, department_code, college_id)\nvalues\n('Computer Information Technology', 'CIT', 1),\n('Economics', 'ECON', 2),\n('Humanities and Philosophy', 'HUM', 3);\n#select*from department;\n\nINSERT INTO course (course_title, course_number, course_credits, department_id)\nvalues\n('Intro to Databases', 111, 3, 1),\n('Econometrics', 388, 4, 2),\n('Micro Economics', 150, 3, 2),\n('Classical Heritage', 376, 2, 3);\n\nINSERT INTO faculty (faculty_fname, faculty_lname, department_id)\nvalues\n('Marty', 'Morring', 1),\n('Nate', 'Norris', 2),\n('Ben', 'Barrus', 2),\n('John', 'Jensen', 3),\n('Bill', 'Barney', 1);\n\nINSERT INTO term (term_name, term_year)\nvalues\n('Fall', 2019),\n('Winter', 2018);\n\nINSERT INTO student (student_fname, student_lname, student_gender, student_city, student_state, student_birth)\nvalues\n('Paul', 'Miller', 'M', 'Dallas', 'TX', 19960222),\n('Katie', 'Smith', 'F', 'Provo', 'UT', 19950722),\n('Kelly', 'Jones', 'F', 'Provo', 'UT', 19980622),\n('Devon', 'Merrill', 'M', 'Mesa', 'AZ', 20000722),\n('Mandy', 'Murdock', 'F', 'Topeka', 'KS', 19961122),\n('Alece', 'Adams', 'F', 'Rigby', 'ID', 19970522),\n('Bryce', 'Carlson', 'M', 'Bozeman', 'MT', 19971122),\n('Preston', 'Larsen', 'M', 'Decatur', 'TN', 19960922),\n('Julia', 'Madsen', 'F', 'Rexburg', 'ID', 19980922),\n('Susan', 'Sorensen', 'F', 'Mesa', 'AZ', 19980809);\n\nINSERT INTO section (section_number, section_capacity, course_id, faculty_id, term_id)\nvalues\n(1, 30, 1, 1, 1),\n(1, 50, 3, 2, 1),\n(2, 50, 3, 2, 1),\n(1, 35, 2, 3, 1),\n(1, 30, 4, 4, 1),\n(2, 30, 1, 1, 2),\n(3, 35, 1, 5, 2),\n(1, 50, 3, 2, 2),\n(2, 50, 3, 2, 2),\n(1, 30, 4, 4, 2);\n\nINSERT INTO enrollment (section_id, student_id)\nvalues\n(7,6),\n(6,7),\n(8,7),\n(10,7),\n(5, 4),\n(9, 9),\n(4, 2),\n(4, 3),\n(4, 5),\n(5, 5),\n(1, 1),\n(3, 1),\n(9, 8),\n(6, 10);\n\n#query1\nSELECT student_fname, student_lname, date_format(student_birth, '%M %d, %Y') AS sept_birthdays\nFROM student\nWHERE date_format(student_birth, '%M') = 'September' ;\n\n#query2\nSELECT student_lname, student_fname, floor(datediff('20170105', student_birth)/365) AS 'Years', datediff('20170105', student_birth)%365 AS 'Days', concat(floor(datediff('20170105', student_birth)/365), ' - Yrs, ',datediff('20170105', student_birth)%365,' - Days') AS 'Years and Days'\nFROM student\nORDER BY student_birth ;\n\n#query3\nSELECT student_fname, student_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN faculty fa\nON fa.faculty_id = se.faculty_id\nWHERE faculty_lname = 'Jensen'\nORDER BY student_lname;\n\n#query4 \nSELECT faculty_fname, faculty_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN faculty fa\nON fa.faculty_id = se.faculty_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE student_fname = 'Bryce' AND term_name ='Winter' AND term_year = 2018\nORDER BY faculty_lname;\n\n#query5\nSELECT student_fname, student_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nJOIN course c\nON c.course_id = se.course_id\nWHERE course_title = 'Econometrics' AND term_name ='Fall' AND term_year = 2019\nORDER BY student_lname;\n\n#query6 \nSELECT department_code, course_number, course_title\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nJOIN course c\nON c.course_id = se.course_id\nJOIN department d\nON d.department_id = c.department_id\nWHERE student_lname = 'Carlson' AND term_name = 'Winter'\nORDER BY course_title;\n\n#query7\nSELECT term_name, term_year, count(st.student_id) AS Enrollment\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name = 'Fall' AND term_year = 2019;\n\n#query 8 \nSELECT college_name, count(c.course_id) AS courses\nFROM college cl\nJOIN department d\nON cl.college_id = d.college_id\nJOIN course c\nON d.department_id = c.department_id\nGROUP BY college_name\nORDER BY college_name;\n\n#query 9 \nSELECT faculty_fname, faculty_lname, sum(section_capacity)\nFROM faculty f\nJOIN section se\nON f.faculty_id = se.faculty_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name = 'Winter' AND term_year= 2018\nGROUP BY faculty_fname, faculty_lname\nORDER BY section_capacity ;\n\n#query10 \nSELECT student_lname, student_fname, sum(course_credits) AS credits\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN course c\nON c.course_id = se.course_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name ='Fall' and term_year = 2019\nGROUP BY student_lname, student_fname\nHAVING credits > 3\nORDER BY credits DESC;\n\n\n\n```","srcMarkdownNoYaml":"\n\n## Goal\nI designed a relational database schema using an Entity-Relationship Diagram (ERD), incorporating key entities such as students, faculty, courses, departments, and enrollments with well-defined relationships. To ensure data integrity, I structured tables efficiently to reduce redundancy. The schema supports queries that retrieve relevant information, such as identifying faculty teaching a particular student in a given term, determining the number of courses offered, analyzing faculty teaching capacities, and filtering data based on specific criteria.\n\n## ERD\n![](image.png)\n\n## CODE\n```sql\n-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema university\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `university` ;\n\n-- -----------------------------------------------------\n-- Schema university\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `university` DEFAULT CHARACTER SET utf8 ;\nUSE `university` ;\n\n-- -----------------------------------------------------\n-- Table `university`.`college`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`college` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`college` (\n  `college_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `college_name` VARCHAR(45) NOT NULL,\n  PRIMARY KEY (`college_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`department`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`department` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`department` (\n  `department_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `department_name` VARCHAR(45) NOT NULL,\n  `department_code` VARCHAR(10) NOT NULL,\n  `college_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`department_id`),\n  INDEX `fk_department_colleage1_idx` (`college_id` ASC) VISIBLE,\n  CONSTRAINT `fk_department_colleage1`\n    FOREIGN KEY (`college_id`)\n    REFERENCES `university`.`college` (`college_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`course`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`course` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`course` (\n  `course_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `course_title` VARCHAR(45) NOT NULL,\n  `course_number` INT NOT NULL,\n  `course_credits` INT NOT NULL,\n  `department_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`course_id`),\n  INDEX `fk_course_department1_idx` (`department_id` ASC) VISIBLE,\n  CONSTRAINT `fk_course_department1`\n    FOREIGN KEY (`department_id`)\n    REFERENCES `university`.`department` (`department_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`faculty`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`faculty` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`faculty` (\n  `faculty_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `faculty_fname` VARCHAR(45) NOT NULL,\n  `faculty_lname` VARCHAR(45) NOT NULL,\n  `department_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`faculty_id`),\n  INDEX `fk_faculty_department1_idx` (`department_id` ASC) VISIBLE,\n  CONSTRAINT `fk_faculty_department1`\n    FOREIGN KEY (`department_id`)\n    REFERENCES `university`.`department` (`department_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`term`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`term` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`term` (\n  `term_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `term_name` VARCHAR(45) NOT NULL,\n  `term_year` YEAR(4) NOT NULL,\n  PRIMARY KEY (`term_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`section`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`section` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`section` (\n  `section_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `section_number` INT NOT NULL,\n  `section_capacity` INT NOT NULL,\n  `course_id` INT UNSIGNED NOT NULL,\n  `faculty_id` INT UNSIGNED NOT NULL,\n  `term_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`section_id`),\n  INDEX `fk_section_course1_idx` (`course_id` ASC) VISIBLE,\n  INDEX `fk_section_faculty1_idx` (`faculty_id` ASC) VISIBLE,\n  INDEX `fk_section_term1_idx` (`term_id` ASC) VISIBLE,\n  CONSTRAINT `fk_section_course1`\n    FOREIGN KEY (`course_id`)\n    REFERENCES `university`.`course` (`course_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_faculty1`\n    FOREIGN KEY (`faculty_id`)\n    REFERENCES `university`.`faculty` (`faculty_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_term1`\n    FOREIGN KEY (`term_id`)\n    REFERENCES `university`.`term` (`term_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`student`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`student` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`student` (\n  `student_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `student_fname` VARCHAR(45) NOT NULL,\n  `student_lname` VARCHAR(45) NOT NULL,\n  `student_gender` CHAR(1) NOT NULL,\n  `student_city` VARCHAR(45) NULL,\n  `student_state` VARCHAR(10) NOT NULL,\n  `student_birth` DATE NOT NULL,\n  PRIMARY KEY (`student_id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `university`.`enrollment`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `university`.`enrollment` ;\n\nCREATE TABLE IF NOT EXISTS `university`.`enrollment` (\n  `section_id` INT UNSIGNED NOT NULL,\n  `student_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`section_id`, `student_id`),\n  INDEX `fk_section_student_student1_idx` (`student_id` ASC) VISIBLE,\n  INDEX `fk_section_student_section1_idx` (`section_id` ASC) VISIBLE,\n  CONSTRAINT `fk_section_student_section1`\n    FOREIGN KEY (`section_id`)\n    REFERENCES `university`.`section` (`section_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_section_student_student1`\n    FOREIGN KEY (`student_id`)\n    REFERENCES `university`.`student` (`student_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\nuse university;\n\nINSERT INTO college (college_name)\nvalues \n('College of PhysicalScience and Engineering'),\n('College of Business and Communication'),\n('College of Language and Letters');\n\nINSERT INTO department (department_name, department_code, college_id)\nvalues\n('Computer Information Technology', 'CIT', 1),\n('Economics', 'ECON', 2),\n('Humanities and Philosophy', 'HUM', 3);\n#select*from department;\n\nINSERT INTO course (course_title, course_number, course_credits, department_id)\nvalues\n('Intro to Databases', 111, 3, 1),\n('Econometrics', 388, 4, 2),\n('Micro Economics', 150, 3, 2),\n('Classical Heritage', 376, 2, 3);\n\nINSERT INTO faculty (faculty_fname, faculty_lname, department_id)\nvalues\n('Marty', 'Morring', 1),\n('Nate', 'Norris', 2),\n('Ben', 'Barrus', 2),\n('John', 'Jensen', 3),\n('Bill', 'Barney', 1);\n\nINSERT INTO term (term_name, term_year)\nvalues\n('Fall', 2019),\n('Winter', 2018);\n\nINSERT INTO student (student_fname, student_lname, student_gender, student_city, student_state, student_birth)\nvalues\n('Paul', 'Miller', 'M', 'Dallas', 'TX', 19960222),\n('Katie', 'Smith', 'F', 'Provo', 'UT', 19950722),\n('Kelly', 'Jones', 'F', 'Provo', 'UT', 19980622),\n('Devon', 'Merrill', 'M', 'Mesa', 'AZ', 20000722),\n('Mandy', 'Murdock', 'F', 'Topeka', 'KS', 19961122),\n('Alece', 'Adams', 'F', 'Rigby', 'ID', 19970522),\n('Bryce', 'Carlson', 'M', 'Bozeman', 'MT', 19971122),\n('Preston', 'Larsen', 'M', 'Decatur', 'TN', 19960922),\n('Julia', 'Madsen', 'F', 'Rexburg', 'ID', 19980922),\n('Susan', 'Sorensen', 'F', 'Mesa', 'AZ', 19980809);\n\nINSERT INTO section (section_number, section_capacity, course_id, faculty_id, term_id)\nvalues\n(1, 30, 1, 1, 1),\n(1, 50, 3, 2, 1),\n(2, 50, 3, 2, 1),\n(1, 35, 2, 3, 1),\n(1, 30, 4, 4, 1),\n(2, 30, 1, 1, 2),\n(3, 35, 1, 5, 2),\n(1, 50, 3, 2, 2),\n(2, 50, 3, 2, 2),\n(1, 30, 4, 4, 2);\n\nINSERT INTO enrollment (section_id, student_id)\nvalues\n(7,6),\n(6,7),\n(8,7),\n(10,7),\n(5, 4),\n(9, 9),\n(4, 2),\n(4, 3),\n(4, 5),\n(5, 5),\n(1, 1),\n(3, 1),\n(9, 8),\n(6, 10);\n\n#query1\nSELECT student_fname, student_lname, date_format(student_birth, '%M %d, %Y') AS sept_birthdays\nFROM student\nWHERE date_format(student_birth, '%M') = 'September' ;\n\n#query2\nSELECT student_lname, student_fname, floor(datediff('20170105', student_birth)/365) AS 'Years', datediff('20170105', student_birth)%365 AS 'Days', concat(floor(datediff('20170105', student_birth)/365), ' - Yrs, ',datediff('20170105', student_birth)%365,' - Days') AS 'Years and Days'\nFROM student\nORDER BY student_birth ;\n\n#query3\nSELECT student_fname, student_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN faculty fa\nON fa.faculty_id = se.faculty_id\nWHERE faculty_lname = 'Jensen'\nORDER BY student_lname;\n\n#query4 \nSELECT faculty_fname, faculty_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN faculty fa\nON fa.faculty_id = se.faculty_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE student_fname = 'Bryce' AND term_name ='Winter' AND term_year = 2018\nORDER BY faculty_lname;\n\n#query5\nSELECT student_fname, student_lname\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nJOIN course c\nON c.course_id = se.course_id\nWHERE course_title = 'Econometrics' AND term_name ='Fall' AND term_year = 2019\nORDER BY student_lname;\n\n#query6 \nSELECT department_code, course_number, course_title\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nJOIN course c\nON c.course_id = se.course_id\nJOIN department d\nON d.department_id = c.department_id\nWHERE student_lname = 'Carlson' AND term_name = 'Winter'\nORDER BY course_title;\n\n#query7\nSELECT term_name, term_year, count(st.student_id) AS Enrollment\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name = 'Fall' AND term_year = 2019;\n\n#query 8 \nSELECT college_name, count(c.course_id) AS courses\nFROM college cl\nJOIN department d\nON cl.college_id = d.college_id\nJOIN course c\nON d.department_id = c.department_id\nGROUP BY college_name\nORDER BY college_name;\n\n#query 9 \nSELECT faculty_fname, faculty_lname, sum(section_capacity)\nFROM faculty f\nJOIN section se\nON f.faculty_id = se.faculty_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name = 'Winter' AND term_year= 2018\nGROUP BY faculty_fname, faculty_lname\nORDER BY section_capacity ;\n\n#query10 \nSELECT student_lname, student_fname, sum(course_credits) AS credits\nFROM student st\nJOIN enrollment en\nON en.student_id = st.student_id\nJOIN section se\nON se.section_id = en.section_id\nJOIN course c\nON c.course_id = se.course_id\nJOIN term t\nON t.term_id = se.term_id\nWHERE term_name ='Fall' and term_year = 2019\nGROUP BY student_lname, student_fname\nHAVING credits > 3\nORDER BY credits DESC;\n\n\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":10.5,"fig-height":7.5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"project_course.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"Search","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cosmo","brand"],"js":"../../scripts.js","title":"University Enrollment ERD","subtitle":"__SQL"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}